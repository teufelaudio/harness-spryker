{% if @('app.build') == 'static' %}
FROM {{ @('docker.repository') ~ '/php-fpm:' ~ @('app.version') }}
{% else %}
FROM {{ @('workspace.name') ~ '-php-fpm:dev' }}
{% endif %}
# fix upstream signal
STOPSIGNAL SIGTERM

# Install cron
RUN apt-get update -qq \
 && DEBIAN_FRONTEND=noninteractive apt-get -qq -y --no-install-recommends install \
   cron \
   sudo \
   wget \
   gnupg2 \
   unzip \
   procps \
 && echo "deb http://apt.postgresql.org/pub/repos/apt bullseye-pgdg main" > /etc/apt/sources.list.d/pgdg.list \
 && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
 && apt-get update -qq \
 && apt-get install -y postgresql-client-14 \
 && apt-get auto-remove -qq -y \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/* \
 && mkdir -p /tmp/php-file-cache \
 && chown -R www-data:www-data /tmp/php-file-cache

WORKDIR /app
COPY .my127ws/docker/image/cron/root /
RUN chmod +x /cron-run-with-env.sh /entrypoint.sh /entrypoint.dynamic.sh
{%- if @('app.build') == 'static' %} \
 && bash /fix_app_permissions.sh
{% endif %}

{% if @('app.build') == 'dynamic' %}
VOLUME /app
{% endif %}
ENV APP_MODE {{ @('app.mode') }}

{% if @('app.build') == 'static' %}
ENTRYPOINT ["/entrypoint.sh"]
{% else %}
ENTRYPOINT ["/entrypoint.dynamic.sh"]
ENTRYPOINT ["/entrypoint.dynamic.with.wait.sh"]
{% endif %}
CMD ["sleep", "infinity"]
