FROM {{ @('docker.image.console') }}
# fix upstream signal
STOPSIGNAL SIGTERM

COPY .my127ws/docker/image/console/root /
RUN chown -R build:build /home/build /app

{% if @('app.build') == 'dynamic' %}
RUN pecl install xhprof
{% endif %}

{%- set install_extensions=@('php.install_extensions')|merge(@('php.cli.install_extensions'))|filter(v => v is not empty) %}
{%- if install_extensions %}
RUN cd /root/installer \
 && ./enable.sh \
    {{ install_extensions|join(" \\\n    ") }}
{% endif %}

{% if @('frontend.build.distribution_packages') or @('backend.build.distribution_packages') %}
RUN apt-get update -qq \
 && DEBIAN_FRONTEND=noninteractive apt-get -qq -y --no-install-recommends install \
    {{ @('frontend.build.distribution_packages') | default([]) | merge(@('backend.build.distribution_packages') | default([])) | join(' ') }} \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*
{% endif %}

ENV APP_MODE={{ @('app.mode') }} \
  APP_BUILD={{ @('app.build') }} \
  ASSETS_DIR={{ @('assets.local') }}
{%- set extra_environment_variables=@('services.console.build.environment')|filter(v => v is not empty) %}
{%- if extra_environment_variables %}
{%- for name, value in extra_environment_variables %} \
  {{ name }}="{{ value }}"
{%- endfor %}
{% endif %}

USER build

{% if @('app.build') == 'static' %}
COPY --chown=build:build .my127ws/application  /home/build/application
COPY --chown=build:build ./                    /app
RUN SIDEKICK_VERBOSE=yes app build
{% else %}
VOLUME /app
VOLUME /home/build/application
{% endif %}

USER root

RUN chmod +x /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
CMD ["sleep", "infinity"]
